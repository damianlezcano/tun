/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tun;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;

import javax.swing.JCheckBox;
import javax.swing.JLabel;

import tun.shell.ShellCommand;

/**
 *
 * @author damian
 */
public class Item extends javax.swing.JPanel {

	private Main main;
	
    /**
     * Creates new form NewJPanel
     */
    public Item() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lblIcon = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        checkbox = new javax.swing.JCheckBox();

        checkbox.addKeyListener(new KeyListener() {
			@Override
			public void keyTyped(KeyEvent e) {
				
			}
			@Override
			public void keyReleased(KeyEvent e) {
		        if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
		        	main.borrarFiltro();
		        	main.getView().getTextField().setVisible(false);
		        	main.getView().getTextField().setText("");
		        	main.getView().pack();
		        }
			}
			@Override
			public void keyPressed(KeyEvent e) {
				
			}
		});
        
        bgNotSelect();

        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("offline.png"))); // NOI18N

        lblTitle.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
//        lblTitle.setText("ssh -L 5000:192.168.1.199:5000 lberetta@192.168.1.199");

        lblDescription.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
//        lblDescription.setText("mercadolibre");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(lblDescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkbox)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkbox)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescription))
                    .addComponent(lblIcon))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    // Variables declaration - do not modify                     
    private javax.swing.JCheckBox checkbox;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration                   

    public JCheckBox getCheckbox() {
        return checkbox;
    }

    public void setCheckbox(JCheckBox checkbox) {
        this.checkbox = checkbox;
    }

    public JLabel getLblDescription() {
        return lblDescription;
    }

    public void setLblDescription(JLabel lblDescription) {
        this.lblDescription = lblDescription;
    }

    public JLabel getLblIcon() {
        return lblIcon;
    }

    public void setLblIcon(JLabel lblIcon) {
        this.lblIcon = lblIcon;
    }

    public JLabel getLblTitle() {
        return lblTitle;
    }

    public void setLblTitle(JLabel lblTitle) {
        this.lblTitle = lblTitle;
    }

	public void evaluatePid(ShellCommand shell) throws IOException {
		String pid = shell.pid(getLblTitle().getText());
		if(pid == null){
			lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("offline.png")));
			checkbox.setSelected(false);
		}else{
			lblIcon.setToolTipText(String.format("PID: %s", pid));
			lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("online.png")));
			checkbox.setSelected(true);
		}
		
	}
	
	public void bgNotSelect(){
		setBackground(new java.awt.Color(254, 254, 254));
	}
	
	public void bgSelect(){
		setBackground(new java.awt.Color(236, 236, 236));
	}
	
	@Override
	public String toString() {
		return lblDescription.getText() + " " + lblTitle.getText();
	}

	public Main getMain() {
		return main;
	}

	public void setMain(Main main) {
		this.main = main;
	}
}
